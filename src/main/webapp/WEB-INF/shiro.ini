[main]
# autenticação
authc = br.com.security.quali.authc.QualiFormAuthc

# specify login page
authc.loginUrl = /login.jsp
authc.usernameParam = user
authc.passwordParam = pass
authc.rememberMeParam = remember
authc.successUrl  = /app/index.xhtml
authc.failureKeyAttribute=qualiLoginFailure
authc.timezoneParam = timezone
authc.msgLoginUnsucess="Login sem sucesso. Verifique usuario e senha."

# base de dados
dataSource = org.apache.shiro.jndi.JndiObjectFactory
dataSource.requiredType = javax.sql.DataSource  
dataSource.resourceName = java:/cuidebem
jdbcRealm = br.com.security.quali.realm.JdbcRealmBlock
jdbcRealm.permissionsLookupEnabled = true
jdbcRealm.authenticationQuery = SELECT password,blocked FROM users WHERE email = ?
jdbcRealm.dataSource = $dataSource
jdbcRealm.msgLoginBlocked="Login bloqueado. Contate administrador."
jdbcRealm.successLogQuery = select sucess from logauth where login = ? order by datalog desc limit ?
jdbcRealm.logQuery = insert into logauth(login,datalog,timezone,sucess) values(?,?,?,?)
jdbcRealm.blockQuery = update users set blocked = 1 where email = ?
jdbcRealm.failLoginQuery = select datalog, timezone from logauth where sucess = 1 and login = ? limit ? 
jdbcRealm.failLoginLimit = 2
jdbcRealm.sucessLoginQuery = select datalog, timezone from logauth where sucess = 1 and login = ? limit 1  
jdbcRealm.numberRetrieValue = 2
jdbcRealm.updateLoginQuery = select alterLogin from users where email = ?
jdbcRealm.updatePasswordQuery = update users set password = ?, alterLogin = ? where email = ?


# hash password
hashService = org.apache.shiro.crypto.hash.DefaultHashService
hashService.hashIterations = 512
hashService.hashAlgorithmName = SHA-256
hashService.generatePublicSalt = true
hashService.privateSalt = cXVhbGlyZWRl
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordService.hashService = $hashService
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
passwordMatcher.passwordService = $passwordService
jdbcRealm.credentialsMatcher = $passwordMatcher  


 
[urls]
# enable authc filter for all application pages
/javax.faces.resource/**=anon
/resources/**=anon
/rest/confirma/**=anon
/**=authc
